
echolocationv2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  00000cca  00000d5e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  0080013c  0080013c  00000d9a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d9a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000df8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00000e38  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c14  00000000  00000000  00000eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000952  00000000  00000000  00001acc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004e3  00000000  00000000  0000241e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000128  00000000  00000000  00002904  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000053d  00000000  00000000  00002a2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000259  00000000  00000000  00002f69  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  000031c2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__vector_1>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 96 00 	jmp	0x12c	; 0x12c <__vector_12>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d0 e1       	ldi	r29, 0x10	; 16
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	ea ec       	ldi	r30, 0xCA	; 202
  90:	fc e0       	ldi	r31, 0x0C	; 12
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	ac 33       	cpi	r26, 0x3C	; 60
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	ac e3       	ldi	r26, 0x3C	; 60
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a0 35       	cpi	r26, 0x50	; 80
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <main>
  b2:	0c 94 63 06 	jmp	0xcc6	; 0xcc6 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <uart_putchar>:
FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
FILE mystdin = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

int uart_putchar(char c, FILE *stream)
{
	loop_until_bit_is_set(UCSR0A, UDRE0);
  ba:	e0 ec       	ldi	r30, 0xC0	; 192
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	90 81       	ld	r25, Z
  c0:	95 ff       	sbrs	r25, 5
  c2:	fd cf       	rjmp	.-6      	; 0xbe <uart_putchar+0x4>
	UDR0 = c;
  c4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
  c8:	80 e0       	ldi	r24, 0x00	; 0
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	08 95       	ret

000000ce <uart_getchar>:
int uart_getchar(FILE *stream)
{
	/* Wait until data exists. */
	loop_until_bit_is_set(UCSR0A, RXC0);
  ce:	e0 ec       	ldi	r30, 0xC0	; 192
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	80 81       	ld	r24, Z
  d4:	88 23       	and	r24, r24
  d6:	ec f7       	brge	.-6      	; 0xd2 <uart_getchar+0x4>
	return UDR0;
  d8:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	08 95       	ret

000000e0 <init_uart>:
void init_uart(void)
{
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
  e0:	88 e1       	ldi	r24, 0x18	; 24
  e2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UBRR0 = 95;//7; // configures a baud rate of 115200
  e6:	8f e5       	ldi	r24, 0x5F	; 95
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  ee:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	stdout = &mystdout;
  f2:	ea e4       	ldi	r30, 0x4A	; 74
  f4:	f1 e0       	ldi	r31, 0x01	; 1
  f6:	82 e1       	ldi	r24, 0x12	; 18
  f8:	91 e0       	ldi	r25, 0x01	; 1
  fa:	93 83       	std	Z+3, r25	; 0x03
  fc:	82 83       	std	Z+2, r24	; 0x02
	stdin = &mystdin;
  fe:	84 e0       	ldi	r24, 0x04	; 4
 100:	91 e0       	ldi	r25, 0x01	; 1
 102:	91 83       	std	Z+1, r25	; 0x01
 104:	80 83       	st	Z, r24
	printf("\n USART system booted\n");
 106:	80 e2       	ldi	r24, 0x20	; 32
 108:	91 e0       	ldi	r25, 0x01	; 1
 10a:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <puts>
 10e:	08 95       	ret

00000110 <init_echo>:
/********************* ECHOLOCATION MODULE***************************
 Echolocation functions
*/
void init_echo(){
	
	DDRB |= (1<<PB1);
 110:	21 9a       	sbi	0x04, 1	; 4
 112:	08 95       	ret

00000114 <trigger_echo>:
}

void trigger_echo()
{
	//trigger 10uS pulse
	PORTB |= (1<<PB1);
 114:	29 9a       	sbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 116:	81 e3       	ldi	r24, 0x31	; 49
 118:	8a 95       	dec	r24
 11a:	f1 f7       	brne	.-4      	; 0x118 <trigger_echo+0x4>
 11c:	00 00       	nop
	_delay_us(10);
	PORTB &= ~(1<<PB1);
 11e:	29 98       	cbi	0x05, 1	; 5
	TCCR1B |= (1<<ICES1);
 120:	e1 e8       	ldi	r30, 0x81	; 129
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	80 81       	ld	r24, Z
 126:	80 64       	ori	r24, 0x40	; 64
 128:	80 83       	st	Z, r24
 12a:	08 95       	ret

0000012c <__vector_12>:
	 //make sure rising edge detection every time.
}

ISR(TIMER1_CAPT_vect)
{
 12c:	1f 92       	push	r1
 12e:	0f 92       	push	r0
 130:	0f b6       	in	r0, 0x3f	; 63
 132:	0f 92       	push	r0
 134:	11 24       	eor	r1, r1
 136:	8f 93       	push	r24
 138:	9f 93       	push	r25
 13a:	ef 93       	push	r30
 13c:	ff 93       	push	r31
	//Capture the value of the ICR1 when the rising edge is found
	//Capture the value of the ICR1 when the falling edge is found
	if (TCCR1B & (1<<ICES1)){
 13e:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 142:	86 ff       	sbrs	r24, 6
 144:	0e c0       	rjmp	.+28     	; 0x162 <__vector_12+0x36>
		t1 = ICR1;
 146:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 14a:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 14e:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <t1+0x1>
 152:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <t1>
		TCCR1B &= ~(1<<ICES1); //Select the falling edge
 156:	e1 e8       	ldi	r30, 0x81	; 129
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	80 81       	ld	r24, Z
 15c:	8f 7b       	andi	r24, 0xBF	; 191
 15e:	80 83       	st	Z, r24
 160:	0d c0       	rjmp	.+26     	; 0x17c <__vector_12+0x50>
		}else{
		t2= ICR1;
 162:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 166:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 16a:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <t2+0x1>
 16e:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <t2>
		TCCR1B |= (1<<ICES1); //Select the rising edge
 172:	e1 e8       	ldi	r30, 0x81	; 129
 174:	f0 e0       	ldi	r31, 0x00	; 0
 176:	80 81       	ld	r24, Z
 178:	80 64       	ori	r24, 0x40	; 64
 17a:	80 83       	st	Z, r24
	}
	
}
 17c:	ff 91       	pop	r31
 17e:	ef 91       	pop	r30
 180:	9f 91       	pop	r25
 182:	8f 91       	pop	r24
 184:	0f 90       	pop	r0
 186:	0f be       	out	0x3f, r0	; 63
 188:	0f 90       	pop	r0
 18a:	1f 90       	pop	r1
 18c:	18 95       	reti

0000018e <measure_echo>:

int measure_echo()
{
	
	pulse_width =t2-t1;
 18e:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <t2>
 192:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <t2+0x1>
 196:	20 91 42 01 	lds	r18, 0x0142	; 0x800142 <t1>
 19a:	30 91 43 01 	lds	r19, 0x0143	; 0x800143 <t1+0x1>
 19e:	82 1b       	sub	r24, r18
 1a0:	93 0b       	sbc	r25, r19
 1a2:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <pulse_width+0x1>
 1a6:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <pulse_width>

	//CPU resolution is 1/(64*F_CPU) ~4.338uS (PRESCALER /64)
	//Formula: distance = uS/58 (HY-SRF05 Data sheet)
	
	return (int)((pulse_width*4.338)/58);
 1aa:	60 91 3e 01 	lds	r22, 0x013E	; 0x80013e <pulse_width>
 1ae:	70 91 3f 01 	lds	r23, 0x013F	; 0x80013f <pulse_width+0x1>
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <__floatunsisf>
 1ba:	25 ee       	ldi	r18, 0xE5	; 229
 1bc:	30 ed       	ldi	r19, 0xD0	; 208
 1be:	4a e8       	ldi	r20, 0x8A	; 138
 1c0:	50 e4       	ldi	r21, 0x40	; 64
 1c2:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__mulsf3>
 1c6:	20 e0       	ldi	r18, 0x00	; 0
 1c8:	30 e0       	ldi	r19, 0x00	; 0
 1ca:	48 e6       	ldi	r20, 0x68	; 104
 1cc:	52 e4       	ldi	r21, 0x42	; 66
 1ce:	0e 94 b2 01 	call	0x364	; 0x364 <__divsf3>
 1d2:	0e 94 24 02 	call	0x448	; 0x448 <__fixsfsi>
}
 1d6:	cb 01       	movw	r24, r22
 1d8:	08 95       	ret

000001da <init_servo>:
//initialize duty cycle
 int duty_cycle = 0;

void init_servo(){
	
	OCR1A =(int)(F_CPU/(64*F_SERVO)); // 4608
 1da:	82 e0       	ldi	r24, 0x02	; 2
 1dc:	92 e1       	ldi	r25, 0x12	; 18
 1de:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1e2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	DDRD |=(1<<PD4);
 1e6:	54 9a       	sbi	0x0a, 4	; 10
 1e8:	08 95       	ret

000001ea <rotate>:
}

int rotate(void)
{
	uint16_t max_duty_cycle = min_duty_cycle + (duty_cycle_increment*180);
 1ea:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1ee:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
	uint16_t _10_deg_increment = duty_cycle_increment * 10;
	
	if(duty_cycle >= min_duty_cycle && duty_cycle < max_duty_cycle)
 1f2:	20 91 3c 01 	lds	r18, 0x013C	; 0x80013c <__data_end>
 1f6:	30 91 3d 01 	lds	r19, 0x013D	; 0x80013d <__data_end+0x1>
 1fa:	28 17       	cp	r18, r24
 1fc:	39 07       	cpc	r19, r25
 1fe:	28 f1       	brcs	.+74     	; 0x24a <rotate+0x60>
	DDRD |=(1<<PD4);
}

int rotate(void)
{
	uint16_t max_duty_cycle = min_duty_cycle + (duty_cycle_increment*180);
 200:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <duty_cycle_increment>
 204:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <duty_cycle_increment+0x1>
	uint16_t _10_deg_increment = duty_cycle_increment * 10;
	
	if(duty_cycle >= min_duty_cycle && duty_cycle < max_duty_cycle)
 208:	e4 eb       	ldi	r30, 0xB4	; 180
 20a:	e4 9f       	mul	r30, r20
 20c:	b0 01       	movw	r22, r0
 20e:	e5 9f       	mul	r30, r21
 210:	70 0d       	add	r23, r0
 212:	11 24       	eor	r1, r1
 214:	68 0f       	add	r22, r24
 216:	79 1f       	adc	r23, r25
 218:	26 17       	cp	r18, r22
 21a:	37 07       	cpc	r19, r23
 21c:	b0 f4       	brcc	.+44     	; 0x24a <rotate+0x60>
	{
		//Update the duty cycle
		duty_cycle += _10_deg_increment;
 21e:	ca 01       	movw	r24, r20
 220:	88 0f       	add	r24, r24
 222:	99 1f       	adc	r25, r25
 224:	44 0f       	add	r20, r20
 226:	55 1f       	adc	r21, r21
 228:	44 0f       	add	r20, r20
 22a:	55 1f       	adc	r21, r21
 22c:	44 0f       	add	r20, r20
 22e:	55 1f       	adc	r21, r21
 230:	48 0f       	add	r20, r24
 232:	59 1f       	adc	r21, r25
 234:	24 0f       	add	r18, r20
 236:	35 1f       	adc	r19, r21
 238:	30 93 3d 01 	sts	0x013D, r19	; 0x80013d <__data_end+0x1>
 23c:	20 93 3c 01 	sts	0x013C, r18	; 0x80013c <__data_end>
		OCR1B = duty_cycle;
 240:	30 93 8b 00 	sts	0x008B, r19	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 244:	20 93 8a 00 	sts	0x008A, r18	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 248:	08 c0       	rjmp	.+16     	; 0x25a <rotate+0x70>
		}else{
		duty_cycle = min_duty_cycle;
 24a:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <__data_end+0x1>
 24e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <__data_end>
		OCR1B = duty_cycle;
 252:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 256:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	}
	
	//Signal Echo locator to start detecting objects
	trigger_echo();
 25a:	0e 94 8a 00 	call	0x114	; 0x114 <trigger_echo>
	
	return (int)((duty_cycle-min_duty_cycle)*0.5);
 25e:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <__data_end>
 262:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <__data_end+0x1>
 266:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 26a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 26e:	68 1b       	sub	r22, r24
 270:	79 0b       	sbc	r23, r25
 272:	80 e0       	ldi	r24, 0x00	; 0
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <__floatunsisf>
 27a:	20 e0       	ldi	r18, 0x00	; 0
 27c:	30 e0       	ldi	r19, 0x00	; 0
 27e:	40 e0       	ldi	r20, 0x00	; 0
 280:	5f e3       	ldi	r21, 0x3F	; 63
 282:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__mulsf3>
 286:	0e 94 24 02 	call	0x448	; 0x448 <__fixsfsi>
}
 28a:	cb 01       	movw	r24, r22
 28c:	08 95       	ret

0000028e <configure_interrupts>:

/********************* RESET MODULE *********************************
*/
void configure_interrupts()
{
	EICRA |= (1<<ISC00)|(1<<ISC01);//rising edge only on INT0 (PD2)
 28e:	e9 e6       	ldi	r30, 0x69	; 105
 290:	f0 e0       	ldi	r31, 0x00	; 0
 292:	80 81       	ld	r24, Z
 294:	83 60       	ori	r24, 0x03	; 3
 296:	80 83       	st	Z, r24
	EIMSK |= (1<<INT0);//enable external interrupt
 298:	e8 9a       	sbi	0x1d, 0	; 29
	
	TIMSK1 = (1<<ICIE1); //Enable input capture interrupt
 29a:	80 e2       	ldi	r24, 0x20	; 32
 29c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	
	sei();
 2a0:	78 94       	sei
 2a2:	08 95       	ret

000002a4 <__vector_1>:
}

ISR(INT0_vect)
{
 2a4:	1f 92       	push	r1
 2a6:	0f 92       	push	r0
 2a8:	0f b6       	in	r0, 0x3f	; 63
 2aa:	0f 92       	push	r0
 2ac:	11 24       	eor	r1, r1
 2ae:	8f 93       	push	r24
 2b0:	9f 93       	push	r25
	button=1;
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <button+0x1>
 2ba:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <button>
}
 2be:	9f 91       	pop	r25
 2c0:	8f 91       	pop	r24
 2c2:	0f 90       	pop	r0
 2c4:	0f be       	out	0x3f, r0	; 63
 2c6:	0f 90       	pop	r0
 2c8:	1f 90       	pop	r1
 2ca:	18 95       	reti

000002cc <init_clock>:

/********************* END OF RESET**********************************/

void init_clock(){
	
	TCCR1A |= (1<<WGM10)|(1<<WGM11);//FAST PWM with
 2cc:	a0 e8       	ldi	r26, 0x80	; 128
 2ce:	b0 e0       	ldi	r27, 0x00	; 0
 2d0:	8c 91       	ld	r24, X
 2d2:	83 60       	ori	r24, 0x03	; 3
 2d4:	8c 93       	st	X, r24
	TCCR1B |= (1<<WGM12)|(1<<WGM13);//TOp value as OCR1A
 2d6:	e1 e8       	ldi	r30, 0x81	; 129
 2d8:	f0 e0       	ldi	r31, 0x00	; 0
 2da:	80 81       	ld	r24, Z
 2dc:	88 61       	ori	r24, 0x18	; 24
 2de:	80 83       	st	Z, r24
	
	TCCR1A |= (1<<COM1B1); //non-inverted PWM waveform
 2e0:	8c 91       	ld	r24, X
 2e2:	80 62       	ori	r24, 0x20	; 32
 2e4:	8c 93       	st	X, r24
	TCCR1B |= (1<<CS10) |(1<<CS11); //Prescaler /64
 2e6:	80 81       	ld	r24, Z
 2e8:	83 60       	ori	r24, 0x03	; 3
 2ea:	80 83       	st	Z, r24
	TCCR1B |= (1<<ICES1); //input capture edge select
 2ec:	80 81       	ld	r24, Z
 2ee:	80 64       	ori	r24, 0x40	; 64
 2f0:	80 83       	st	Z, r24
 2f2:	08 95       	ret

000002f4 <main>:
*/

int main(void)
{	
	// configure all modules
	init_uart();
 2f4:	0e 94 70 00 	call	0xe0	; 0xe0 <init_uart>
	configure_interrupts();
 2f8:	0e 94 47 01 	call	0x28e	; 0x28e <configure_interrupts>
	init_servo();
 2fc:	0e 94 ed 00 	call	0x1da	; 0x1da <init_servo>
	init_echo();
 300:	0e 94 88 00 	call	0x110	; 0x110 <init_echo>
	init_clock();
 304:	0e 94 66 01 	call	0x2cc	; 0x2cc <init_clock>
			//Find the distance of the object
			object_distance = measure_echo();	
			//if an object is detected, display its distance and angle on the screen 
			
				_delay_ms(1000);
				printf("%u \n",angle);
 308:	c6 e3       	ldi	r28, 0x36	; 54
 30a:	d1 e0       	ldi	r29, 0x01	; 1
	
	
	while(1)
	{
	
			button=0;
 30c:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <button+0x1>
 310:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <button>
			//Rotate servo by 1 degree
			angle = rotate();
 314:	0e 94 f5 00 	call	0x1ea	; 0x1ea <rotate>
 318:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <angle+0x1>
 31c:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <angle>
			//Find the distance of the object
			object_distance = measure_echo();	
 320:	0e 94 c7 00 	call	0x18e	; 0x18e <measure_echo>
 324:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <object_distance+0x1>
 328:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <object_distance>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 32c:	27 e0       	ldi	r18, 0x07	; 7
 32e:	87 e0       	ldi	r24, 0x07	; 7
 330:	9d e2       	ldi	r25, 0x2D	; 45
 332:	21 50       	subi	r18, 0x01	; 1
 334:	80 40       	sbci	r24, 0x00	; 0
 336:	90 40       	sbci	r25, 0x00	; 0
 338:	e1 f7       	brne	.-8      	; 0x332 <main+0x3e>
 33a:	00 c0       	rjmp	.+0      	; 0x33c <main+0x48>
 33c:	00 00       	nop
			//if an object is detected, display its distance and angle on the screen 
			
				_delay_ms(1000);
				printf("%u \n",angle);
 33e:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <angle>
 342:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <angle+0x1>
 346:	9f 93       	push	r25
 348:	8f 93       	push	r24
 34a:	df 93       	push	r29
 34c:	cf 93       	push	r28
 34e:	0e 94 55 03 	call	0x6aa	; 0x6aa <printf>
				object_distance = 0;
 352:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <object_distance+0x1>
 356:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <object_distance>
 35a:	0f 90       	pop	r0
 35c:	0f 90       	pop	r0
 35e:	0f 90       	pop	r0
 360:	0f 90       	pop	r0
 362:	d4 cf       	rjmp	.-88     	; 0x30c <main+0x18>

00000364 <__divsf3>:
 364:	0e 94 c6 01 	call	0x38c	; 0x38c <__divsf3x>
 368:	0c 94 ae 02 	jmp	0x55c	; 0x55c <__fp_round>
 36c:	0e 94 a7 02 	call	0x54e	; 0x54e <__fp_pscB>
 370:	58 f0       	brcs	.+22     	; 0x388 <__divsf3+0x24>
 372:	0e 94 a0 02 	call	0x540	; 0x540 <__fp_pscA>
 376:	40 f0       	brcs	.+16     	; 0x388 <__divsf3+0x24>
 378:	29 f4       	brne	.+10     	; 0x384 <__divsf3+0x20>
 37a:	5f 3f       	cpi	r21, 0xFF	; 255
 37c:	29 f0       	breq	.+10     	; 0x388 <__divsf3+0x24>
 37e:	0c 94 97 02 	jmp	0x52e	; 0x52e <__fp_inf>
 382:	51 11       	cpse	r21, r1
 384:	0c 94 e2 02 	jmp	0x5c4	; 0x5c4 <__fp_szero>
 388:	0c 94 9d 02 	jmp	0x53a	; 0x53a <__fp_nan>

0000038c <__divsf3x>:
 38c:	0e 94 bf 02 	call	0x57e	; 0x57e <__fp_split3>
 390:	68 f3       	brcs	.-38     	; 0x36c <__divsf3+0x8>

00000392 <__divsf3_pse>:
 392:	99 23       	and	r25, r25
 394:	b1 f3       	breq	.-20     	; 0x382 <__divsf3+0x1e>
 396:	55 23       	and	r21, r21
 398:	91 f3       	breq	.-28     	; 0x37e <__divsf3+0x1a>
 39a:	95 1b       	sub	r25, r21
 39c:	55 0b       	sbc	r21, r21
 39e:	bb 27       	eor	r27, r27
 3a0:	aa 27       	eor	r26, r26
 3a2:	62 17       	cp	r22, r18
 3a4:	73 07       	cpc	r23, r19
 3a6:	84 07       	cpc	r24, r20
 3a8:	38 f0       	brcs	.+14     	; 0x3b8 <__divsf3_pse+0x26>
 3aa:	9f 5f       	subi	r25, 0xFF	; 255
 3ac:	5f 4f       	sbci	r21, 0xFF	; 255
 3ae:	22 0f       	add	r18, r18
 3b0:	33 1f       	adc	r19, r19
 3b2:	44 1f       	adc	r20, r20
 3b4:	aa 1f       	adc	r26, r26
 3b6:	a9 f3       	breq	.-22     	; 0x3a2 <__divsf3_pse+0x10>
 3b8:	35 d0       	rcall	.+106    	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 3ba:	0e 2e       	mov	r0, r30
 3bc:	3a f0       	brmi	.+14     	; 0x3cc <__divsf3_pse+0x3a>
 3be:	e0 e8       	ldi	r30, 0x80	; 128
 3c0:	32 d0       	rcall	.+100    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 3c2:	91 50       	subi	r25, 0x01	; 1
 3c4:	50 40       	sbci	r21, 0x00	; 0
 3c6:	e6 95       	lsr	r30
 3c8:	00 1c       	adc	r0, r0
 3ca:	ca f7       	brpl	.-14     	; 0x3be <__divsf3_pse+0x2c>
 3cc:	2b d0       	rcall	.+86     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 3ce:	fe 2f       	mov	r31, r30
 3d0:	29 d0       	rcall	.+82     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 3d2:	66 0f       	add	r22, r22
 3d4:	77 1f       	adc	r23, r23
 3d6:	88 1f       	adc	r24, r24
 3d8:	bb 1f       	adc	r27, r27
 3da:	26 17       	cp	r18, r22
 3dc:	37 07       	cpc	r19, r23
 3de:	48 07       	cpc	r20, r24
 3e0:	ab 07       	cpc	r26, r27
 3e2:	b0 e8       	ldi	r27, 0x80	; 128
 3e4:	09 f0       	breq	.+2      	; 0x3e8 <__divsf3_pse+0x56>
 3e6:	bb 0b       	sbc	r27, r27
 3e8:	80 2d       	mov	r24, r0
 3ea:	bf 01       	movw	r22, r30
 3ec:	ff 27       	eor	r31, r31
 3ee:	93 58       	subi	r25, 0x83	; 131
 3f0:	5f 4f       	sbci	r21, 0xFF	; 255
 3f2:	3a f0       	brmi	.+14     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f4:	9e 3f       	cpi	r25, 0xFE	; 254
 3f6:	51 05       	cpc	r21, r1
 3f8:	78 f0       	brcs	.+30     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3fa:	0c 94 97 02 	jmp	0x52e	; 0x52e <__fp_inf>
 3fe:	0c 94 e2 02 	jmp	0x5c4	; 0x5c4 <__fp_szero>
 402:	5f 3f       	cpi	r21, 0xFF	; 255
 404:	e4 f3       	brlt	.-8      	; 0x3fe <__divsf3_pse+0x6c>
 406:	98 3e       	cpi	r25, 0xE8	; 232
 408:	d4 f3       	brlt	.-12     	; 0x3fe <__divsf3_pse+0x6c>
 40a:	86 95       	lsr	r24
 40c:	77 95       	ror	r23
 40e:	67 95       	ror	r22
 410:	b7 95       	ror	r27
 412:	f7 95       	ror	r31
 414:	9f 5f       	subi	r25, 0xFF	; 255
 416:	c9 f7       	brne	.-14     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 418:	88 0f       	add	r24, r24
 41a:	91 1d       	adc	r25, r1
 41c:	96 95       	lsr	r25
 41e:	87 95       	ror	r24
 420:	97 f9       	bld	r25, 7
 422:	08 95       	ret
 424:	e1 e0       	ldi	r30, 0x01	; 1
 426:	66 0f       	add	r22, r22
 428:	77 1f       	adc	r23, r23
 42a:	88 1f       	adc	r24, r24
 42c:	bb 1f       	adc	r27, r27
 42e:	62 17       	cp	r22, r18
 430:	73 07       	cpc	r23, r19
 432:	84 07       	cpc	r24, r20
 434:	ba 07       	cpc	r27, r26
 436:	20 f0       	brcs	.+8      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 438:	62 1b       	sub	r22, r18
 43a:	73 0b       	sbc	r23, r19
 43c:	84 0b       	sbc	r24, r20
 43e:	ba 0b       	sbc	r27, r26
 440:	ee 1f       	adc	r30, r30
 442:	88 f7       	brcc	.-30     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 444:	e0 95       	com	r30
 446:	08 95       	ret

00000448 <__fixsfsi>:
 448:	0e 94 2b 02 	call	0x456	; 0x456 <__fixunssfsi>
 44c:	68 94       	set
 44e:	b1 11       	cpse	r27, r1
 450:	0c 94 e2 02 	jmp	0x5c4	; 0x5c4 <__fp_szero>
 454:	08 95       	ret

00000456 <__fixunssfsi>:
 456:	0e 94 c7 02 	call	0x58e	; 0x58e <__fp_splitA>
 45a:	88 f0       	brcs	.+34     	; 0x47e <__fixunssfsi+0x28>
 45c:	9f 57       	subi	r25, 0x7F	; 127
 45e:	98 f0       	brcs	.+38     	; 0x486 <__fixunssfsi+0x30>
 460:	b9 2f       	mov	r27, r25
 462:	99 27       	eor	r25, r25
 464:	b7 51       	subi	r27, 0x17	; 23
 466:	b0 f0       	brcs	.+44     	; 0x494 <__fixunssfsi+0x3e>
 468:	e1 f0       	breq	.+56     	; 0x4a2 <__fixunssfsi+0x4c>
 46a:	66 0f       	add	r22, r22
 46c:	77 1f       	adc	r23, r23
 46e:	88 1f       	adc	r24, r24
 470:	99 1f       	adc	r25, r25
 472:	1a f0       	brmi	.+6      	; 0x47a <__fixunssfsi+0x24>
 474:	ba 95       	dec	r27
 476:	c9 f7       	brne	.-14     	; 0x46a <__fixunssfsi+0x14>
 478:	14 c0       	rjmp	.+40     	; 0x4a2 <__fixunssfsi+0x4c>
 47a:	b1 30       	cpi	r27, 0x01	; 1
 47c:	91 f0       	breq	.+36     	; 0x4a2 <__fixunssfsi+0x4c>
 47e:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__fp_zero>
 482:	b1 e0       	ldi	r27, 0x01	; 1
 484:	08 95       	ret
 486:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__fp_zero>
 48a:	67 2f       	mov	r22, r23
 48c:	78 2f       	mov	r23, r24
 48e:	88 27       	eor	r24, r24
 490:	b8 5f       	subi	r27, 0xF8	; 248
 492:	39 f0       	breq	.+14     	; 0x4a2 <__fixunssfsi+0x4c>
 494:	b9 3f       	cpi	r27, 0xF9	; 249
 496:	cc f3       	brlt	.-14     	; 0x48a <__fixunssfsi+0x34>
 498:	86 95       	lsr	r24
 49a:	77 95       	ror	r23
 49c:	67 95       	ror	r22
 49e:	b3 95       	inc	r27
 4a0:	d9 f7       	brne	.-10     	; 0x498 <__fixunssfsi+0x42>
 4a2:	3e f4       	brtc	.+14     	; 0x4b2 <__fixunssfsi+0x5c>
 4a4:	90 95       	com	r25
 4a6:	80 95       	com	r24
 4a8:	70 95       	com	r23
 4aa:	61 95       	neg	r22
 4ac:	7f 4f       	sbci	r23, 0xFF	; 255
 4ae:	8f 4f       	sbci	r24, 0xFF	; 255
 4b0:	9f 4f       	sbci	r25, 0xFF	; 255
 4b2:	08 95       	ret

000004b4 <__floatunsisf>:
 4b4:	e8 94       	clt
 4b6:	09 c0       	rjmp	.+18     	; 0x4ca <__floatsisf+0x12>

000004b8 <__floatsisf>:
 4b8:	97 fb       	bst	r25, 7
 4ba:	3e f4       	brtc	.+14     	; 0x4ca <__floatsisf+0x12>
 4bc:	90 95       	com	r25
 4be:	80 95       	com	r24
 4c0:	70 95       	com	r23
 4c2:	61 95       	neg	r22
 4c4:	7f 4f       	sbci	r23, 0xFF	; 255
 4c6:	8f 4f       	sbci	r24, 0xFF	; 255
 4c8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ca:	99 23       	and	r25, r25
 4cc:	a9 f0       	breq	.+42     	; 0x4f8 <__floatsisf+0x40>
 4ce:	f9 2f       	mov	r31, r25
 4d0:	96 e9       	ldi	r25, 0x96	; 150
 4d2:	bb 27       	eor	r27, r27
 4d4:	93 95       	inc	r25
 4d6:	f6 95       	lsr	r31
 4d8:	87 95       	ror	r24
 4da:	77 95       	ror	r23
 4dc:	67 95       	ror	r22
 4de:	b7 95       	ror	r27
 4e0:	f1 11       	cpse	r31, r1
 4e2:	f8 cf       	rjmp	.-16     	; 0x4d4 <__floatsisf+0x1c>
 4e4:	fa f4       	brpl	.+62     	; 0x524 <__floatsisf+0x6c>
 4e6:	bb 0f       	add	r27, r27
 4e8:	11 f4       	brne	.+4      	; 0x4ee <__floatsisf+0x36>
 4ea:	60 ff       	sbrs	r22, 0
 4ec:	1b c0       	rjmp	.+54     	; 0x524 <__floatsisf+0x6c>
 4ee:	6f 5f       	subi	r22, 0xFF	; 255
 4f0:	7f 4f       	sbci	r23, 0xFF	; 255
 4f2:	8f 4f       	sbci	r24, 0xFF	; 255
 4f4:	9f 4f       	sbci	r25, 0xFF	; 255
 4f6:	16 c0       	rjmp	.+44     	; 0x524 <__floatsisf+0x6c>
 4f8:	88 23       	and	r24, r24
 4fa:	11 f0       	breq	.+4      	; 0x500 <__floatsisf+0x48>
 4fc:	96 e9       	ldi	r25, 0x96	; 150
 4fe:	11 c0       	rjmp	.+34     	; 0x522 <__floatsisf+0x6a>
 500:	77 23       	and	r23, r23
 502:	21 f0       	breq	.+8      	; 0x50c <__floatsisf+0x54>
 504:	9e e8       	ldi	r25, 0x8E	; 142
 506:	87 2f       	mov	r24, r23
 508:	76 2f       	mov	r23, r22
 50a:	05 c0       	rjmp	.+10     	; 0x516 <__floatsisf+0x5e>
 50c:	66 23       	and	r22, r22
 50e:	71 f0       	breq	.+28     	; 0x52c <__floatsisf+0x74>
 510:	96 e8       	ldi	r25, 0x86	; 134
 512:	86 2f       	mov	r24, r22
 514:	70 e0       	ldi	r23, 0x00	; 0
 516:	60 e0       	ldi	r22, 0x00	; 0
 518:	2a f0       	brmi	.+10     	; 0x524 <__floatsisf+0x6c>
 51a:	9a 95       	dec	r25
 51c:	66 0f       	add	r22, r22
 51e:	77 1f       	adc	r23, r23
 520:	88 1f       	adc	r24, r24
 522:	da f7       	brpl	.-10     	; 0x51a <__floatsisf+0x62>
 524:	88 0f       	add	r24, r24
 526:	96 95       	lsr	r25
 528:	87 95       	ror	r24
 52a:	97 f9       	bld	r25, 7
 52c:	08 95       	ret

0000052e <__fp_inf>:
 52e:	97 f9       	bld	r25, 7
 530:	9f 67       	ori	r25, 0x7F	; 127
 532:	80 e8       	ldi	r24, 0x80	; 128
 534:	70 e0       	ldi	r23, 0x00	; 0
 536:	60 e0       	ldi	r22, 0x00	; 0
 538:	08 95       	ret

0000053a <__fp_nan>:
 53a:	9f ef       	ldi	r25, 0xFF	; 255
 53c:	80 ec       	ldi	r24, 0xC0	; 192
 53e:	08 95       	ret

00000540 <__fp_pscA>:
 540:	00 24       	eor	r0, r0
 542:	0a 94       	dec	r0
 544:	16 16       	cp	r1, r22
 546:	17 06       	cpc	r1, r23
 548:	18 06       	cpc	r1, r24
 54a:	09 06       	cpc	r0, r25
 54c:	08 95       	ret

0000054e <__fp_pscB>:
 54e:	00 24       	eor	r0, r0
 550:	0a 94       	dec	r0
 552:	12 16       	cp	r1, r18
 554:	13 06       	cpc	r1, r19
 556:	14 06       	cpc	r1, r20
 558:	05 06       	cpc	r0, r21
 55a:	08 95       	ret

0000055c <__fp_round>:
 55c:	09 2e       	mov	r0, r25
 55e:	03 94       	inc	r0
 560:	00 0c       	add	r0, r0
 562:	11 f4       	brne	.+4      	; 0x568 <__fp_round+0xc>
 564:	88 23       	and	r24, r24
 566:	52 f0       	brmi	.+20     	; 0x57c <__fp_round+0x20>
 568:	bb 0f       	add	r27, r27
 56a:	40 f4       	brcc	.+16     	; 0x57c <__fp_round+0x20>
 56c:	bf 2b       	or	r27, r31
 56e:	11 f4       	brne	.+4      	; 0x574 <__fp_round+0x18>
 570:	60 ff       	sbrs	r22, 0
 572:	04 c0       	rjmp	.+8      	; 0x57c <__fp_round+0x20>
 574:	6f 5f       	subi	r22, 0xFF	; 255
 576:	7f 4f       	sbci	r23, 0xFF	; 255
 578:	8f 4f       	sbci	r24, 0xFF	; 255
 57a:	9f 4f       	sbci	r25, 0xFF	; 255
 57c:	08 95       	ret

0000057e <__fp_split3>:
 57e:	57 fd       	sbrc	r21, 7
 580:	90 58       	subi	r25, 0x80	; 128
 582:	44 0f       	add	r20, r20
 584:	55 1f       	adc	r21, r21
 586:	59 f0       	breq	.+22     	; 0x59e <__fp_splitA+0x10>
 588:	5f 3f       	cpi	r21, 0xFF	; 255
 58a:	71 f0       	breq	.+28     	; 0x5a8 <__fp_splitA+0x1a>
 58c:	47 95       	ror	r20

0000058e <__fp_splitA>:
 58e:	88 0f       	add	r24, r24
 590:	97 fb       	bst	r25, 7
 592:	99 1f       	adc	r25, r25
 594:	61 f0       	breq	.+24     	; 0x5ae <__fp_splitA+0x20>
 596:	9f 3f       	cpi	r25, 0xFF	; 255
 598:	79 f0       	breq	.+30     	; 0x5b8 <__fp_splitA+0x2a>
 59a:	87 95       	ror	r24
 59c:	08 95       	ret
 59e:	12 16       	cp	r1, r18
 5a0:	13 06       	cpc	r1, r19
 5a2:	14 06       	cpc	r1, r20
 5a4:	55 1f       	adc	r21, r21
 5a6:	f2 cf       	rjmp	.-28     	; 0x58c <__fp_split3+0xe>
 5a8:	46 95       	lsr	r20
 5aa:	f1 df       	rcall	.-30     	; 0x58e <__fp_splitA>
 5ac:	08 c0       	rjmp	.+16     	; 0x5be <__fp_splitA+0x30>
 5ae:	16 16       	cp	r1, r22
 5b0:	17 06       	cpc	r1, r23
 5b2:	18 06       	cpc	r1, r24
 5b4:	99 1f       	adc	r25, r25
 5b6:	f1 cf       	rjmp	.-30     	; 0x59a <__fp_splitA+0xc>
 5b8:	86 95       	lsr	r24
 5ba:	71 05       	cpc	r23, r1
 5bc:	61 05       	cpc	r22, r1
 5be:	08 94       	sec
 5c0:	08 95       	ret

000005c2 <__fp_zero>:
 5c2:	e8 94       	clt

000005c4 <__fp_szero>:
 5c4:	bb 27       	eor	r27, r27
 5c6:	66 27       	eor	r22, r22
 5c8:	77 27       	eor	r23, r23
 5ca:	cb 01       	movw	r24, r22
 5cc:	97 f9       	bld	r25, 7
 5ce:	08 95       	ret

000005d0 <__mulsf3>:
 5d0:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__mulsf3x>
 5d4:	0c 94 ae 02 	jmp	0x55c	; 0x55c <__fp_round>
 5d8:	0e 94 a0 02 	call	0x540	; 0x540 <__fp_pscA>
 5dc:	38 f0       	brcs	.+14     	; 0x5ec <__mulsf3+0x1c>
 5de:	0e 94 a7 02 	call	0x54e	; 0x54e <__fp_pscB>
 5e2:	20 f0       	brcs	.+8      	; 0x5ec <__mulsf3+0x1c>
 5e4:	95 23       	and	r25, r21
 5e6:	11 f0       	breq	.+4      	; 0x5ec <__mulsf3+0x1c>
 5e8:	0c 94 97 02 	jmp	0x52e	; 0x52e <__fp_inf>
 5ec:	0c 94 9d 02 	jmp	0x53a	; 0x53a <__fp_nan>
 5f0:	11 24       	eor	r1, r1
 5f2:	0c 94 e2 02 	jmp	0x5c4	; 0x5c4 <__fp_szero>

000005f6 <__mulsf3x>:
 5f6:	0e 94 bf 02 	call	0x57e	; 0x57e <__fp_split3>
 5fa:	70 f3       	brcs	.-36     	; 0x5d8 <__mulsf3+0x8>

000005fc <__mulsf3_pse>:
 5fc:	95 9f       	mul	r25, r21
 5fe:	c1 f3       	breq	.-16     	; 0x5f0 <__mulsf3+0x20>
 600:	95 0f       	add	r25, r21
 602:	50 e0       	ldi	r21, 0x00	; 0
 604:	55 1f       	adc	r21, r21
 606:	62 9f       	mul	r22, r18
 608:	f0 01       	movw	r30, r0
 60a:	72 9f       	mul	r23, r18
 60c:	bb 27       	eor	r27, r27
 60e:	f0 0d       	add	r31, r0
 610:	b1 1d       	adc	r27, r1
 612:	63 9f       	mul	r22, r19
 614:	aa 27       	eor	r26, r26
 616:	f0 0d       	add	r31, r0
 618:	b1 1d       	adc	r27, r1
 61a:	aa 1f       	adc	r26, r26
 61c:	64 9f       	mul	r22, r20
 61e:	66 27       	eor	r22, r22
 620:	b0 0d       	add	r27, r0
 622:	a1 1d       	adc	r26, r1
 624:	66 1f       	adc	r22, r22
 626:	82 9f       	mul	r24, r18
 628:	22 27       	eor	r18, r18
 62a:	b0 0d       	add	r27, r0
 62c:	a1 1d       	adc	r26, r1
 62e:	62 1f       	adc	r22, r18
 630:	73 9f       	mul	r23, r19
 632:	b0 0d       	add	r27, r0
 634:	a1 1d       	adc	r26, r1
 636:	62 1f       	adc	r22, r18
 638:	83 9f       	mul	r24, r19
 63a:	a0 0d       	add	r26, r0
 63c:	61 1d       	adc	r22, r1
 63e:	22 1f       	adc	r18, r18
 640:	74 9f       	mul	r23, r20
 642:	33 27       	eor	r19, r19
 644:	a0 0d       	add	r26, r0
 646:	61 1d       	adc	r22, r1
 648:	23 1f       	adc	r18, r19
 64a:	84 9f       	mul	r24, r20
 64c:	60 0d       	add	r22, r0
 64e:	21 1d       	adc	r18, r1
 650:	82 2f       	mov	r24, r18
 652:	76 2f       	mov	r23, r22
 654:	6a 2f       	mov	r22, r26
 656:	11 24       	eor	r1, r1
 658:	9f 57       	subi	r25, 0x7F	; 127
 65a:	50 40       	sbci	r21, 0x00	; 0
 65c:	9a f0       	brmi	.+38     	; 0x684 <__mulsf3_pse+0x88>
 65e:	f1 f0       	breq	.+60     	; 0x69c <__mulsf3_pse+0xa0>
 660:	88 23       	and	r24, r24
 662:	4a f0       	brmi	.+18     	; 0x676 <__mulsf3_pse+0x7a>
 664:	ee 0f       	add	r30, r30
 666:	ff 1f       	adc	r31, r31
 668:	bb 1f       	adc	r27, r27
 66a:	66 1f       	adc	r22, r22
 66c:	77 1f       	adc	r23, r23
 66e:	88 1f       	adc	r24, r24
 670:	91 50       	subi	r25, 0x01	; 1
 672:	50 40       	sbci	r21, 0x00	; 0
 674:	a9 f7       	brne	.-22     	; 0x660 <__mulsf3_pse+0x64>
 676:	9e 3f       	cpi	r25, 0xFE	; 254
 678:	51 05       	cpc	r21, r1
 67a:	80 f0       	brcs	.+32     	; 0x69c <__mulsf3_pse+0xa0>
 67c:	0c 94 97 02 	jmp	0x52e	; 0x52e <__fp_inf>
 680:	0c 94 e2 02 	jmp	0x5c4	; 0x5c4 <__fp_szero>
 684:	5f 3f       	cpi	r21, 0xFF	; 255
 686:	e4 f3       	brlt	.-8      	; 0x680 <__mulsf3_pse+0x84>
 688:	98 3e       	cpi	r25, 0xE8	; 232
 68a:	d4 f3       	brlt	.-12     	; 0x680 <__mulsf3_pse+0x84>
 68c:	86 95       	lsr	r24
 68e:	77 95       	ror	r23
 690:	67 95       	ror	r22
 692:	b7 95       	ror	r27
 694:	f7 95       	ror	r31
 696:	e7 95       	ror	r30
 698:	9f 5f       	subi	r25, 0xFF	; 255
 69a:	c1 f7       	brne	.-16     	; 0x68c <__mulsf3_pse+0x90>
 69c:	fe 2b       	or	r31, r30
 69e:	88 0f       	add	r24, r24
 6a0:	91 1d       	adc	r25, r1
 6a2:	96 95       	lsr	r25
 6a4:	87 95       	ror	r24
 6a6:	97 f9       	bld	r25, 7
 6a8:	08 95       	ret

000006aa <printf>:
 6aa:	a0 e0       	ldi	r26, 0x00	; 0
 6ac:	b0 e0       	ldi	r27, 0x00	; 0
 6ae:	eb e5       	ldi	r30, 0x5B	; 91
 6b0:	f3 e0       	ldi	r31, 0x03	; 3
 6b2:	0c 94 3c 06 	jmp	0xc78	; 0xc78 <__prologue_saves__+0x20>
 6b6:	ae 01       	movw	r20, r28
 6b8:	4b 5f       	subi	r20, 0xFB	; 251
 6ba:	5f 4f       	sbci	r21, 0xFF	; 255
 6bc:	fa 01       	movw	r30, r20
 6be:	61 91       	ld	r22, Z+
 6c0:	71 91       	ld	r23, Z+
 6c2:	af 01       	movw	r20, r30
 6c4:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <__iob+0x2>
 6c8:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <__iob+0x3>
 6cc:	0e 94 9b 03 	call	0x736	; 0x736 <vfprintf>
 6d0:	e2 e0       	ldi	r30, 0x02	; 2
 6d2:	0c 94 58 06 	jmp	0xcb0	; 0xcb0 <__epilogue_restores__+0x20>

000006d6 <puts>:
 6d6:	0f 93       	push	r16
 6d8:	1f 93       	push	r17
 6da:	cf 93       	push	r28
 6dc:	df 93       	push	r29
 6de:	e0 91 4c 01 	lds	r30, 0x014C	; 0x80014c <__iob+0x2>
 6e2:	f0 91 4d 01 	lds	r31, 0x014D	; 0x80014d <__iob+0x3>
 6e6:	23 81       	ldd	r18, Z+3	; 0x03
 6e8:	21 ff       	sbrs	r18, 1
 6ea:	1b c0       	rjmp	.+54     	; 0x722 <puts+0x4c>
 6ec:	8c 01       	movw	r16, r24
 6ee:	d0 e0       	ldi	r29, 0x00	; 0
 6f0:	c0 e0       	ldi	r28, 0x00	; 0
 6f2:	f8 01       	movw	r30, r16
 6f4:	81 91       	ld	r24, Z+
 6f6:	8f 01       	movw	r16, r30
 6f8:	60 91 4c 01 	lds	r22, 0x014C	; 0x80014c <__iob+0x2>
 6fc:	70 91 4d 01 	lds	r23, 0x014D	; 0x80014d <__iob+0x3>
 700:	db 01       	movw	r26, r22
 702:	18 96       	adiw	r26, 0x08	; 8
 704:	ed 91       	ld	r30, X+
 706:	fc 91       	ld	r31, X
 708:	19 97       	sbiw	r26, 0x09	; 9
 70a:	88 23       	and	r24, r24
 70c:	31 f0       	breq	.+12     	; 0x71a <puts+0x44>
 70e:	09 95       	icall
 710:	89 2b       	or	r24, r25
 712:	79 f3       	breq	.-34     	; 0x6f2 <puts+0x1c>
 714:	df ef       	ldi	r29, 0xFF	; 255
 716:	cf ef       	ldi	r28, 0xFF	; 255
 718:	ec cf       	rjmp	.-40     	; 0x6f2 <puts+0x1c>
 71a:	8a e0       	ldi	r24, 0x0A	; 10
 71c:	09 95       	icall
 71e:	89 2b       	or	r24, r25
 720:	19 f0       	breq	.+6      	; 0x728 <puts+0x52>
 722:	8f ef       	ldi	r24, 0xFF	; 255
 724:	9f ef       	ldi	r25, 0xFF	; 255
 726:	02 c0       	rjmp	.+4      	; 0x72c <puts+0x56>
 728:	8d 2f       	mov	r24, r29
 72a:	9c 2f       	mov	r25, r28
 72c:	df 91       	pop	r29
 72e:	cf 91       	pop	r28
 730:	1f 91       	pop	r17
 732:	0f 91       	pop	r16
 734:	08 95       	ret

00000736 <vfprintf>:
 736:	ab e0       	ldi	r26, 0x0B	; 11
 738:	b0 e0       	ldi	r27, 0x00	; 0
 73a:	e1 ea       	ldi	r30, 0xA1	; 161
 73c:	f3 e0       	ldi	r31, 0x03	; 3
 73e:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__prologue_saves__>
 742:	6c 01       	movw	r12, r24
 744:	7b 01       	movw	r14, r22
 746:	8a 01       	movw	r16, r20
 748:	fc 01       	movw	r30, r24
 74a:	17 82       	std	Z+7, r1	; 0x07
 74c:	16 82       	std	Z+6, r1	; 0x06
 74e:	83 81       	ldd	r24, Z+3	; 0x03
 750:	81 ff       	sbrs	r24, 1
 752:	cc c1       	rjmp	.+920    	; 0xaec <vfprintf+0x3b6>
 754:	ce 01       	movw	r24, r28
 756:	01 96       	adiw	r24, 0x01	; 1
 758:	3c 01       	movw	r6, r24
 75a:	f6 01       	movw	r30, r12
 75c:	93 81       	ldd	r25, Z+3	; 0x03
 75e:	f7 01       	movw	r30, r14
 760:	93 fd       	sbrc	r25, 3
 762:	85 91       	lpm	r24, Z+
 764:	93 ff       	sbrs	r25, 3
 766:	81 91       	ld	r24, Z+
 768:	7f 01       	movw	r14, r30
 76a:	88 23       	and	r24, r24
 76c:	09 f4       	brne	.+2      	; 0x770 <vfprintf+0x3a>
 76e:	ba c1       	rjmp	.+884    	; 0xae4 <vfprintf+0x3ae>
 770:	85 32       	cpi	r24, 0x25	; 37
 772:	39 f4       	brne	.+14     	; 0x782 <vfprintf+0x4c>
 774:	93 fd       	sbrc	r25, 3
 776:	85 91       	lpm	r24, Z+
 778:	93 ff       	sbrs	r25, 3
 77a:	81 91       	ld	r24, Z+
 77c:	7f 01       	movw	r14, r30
 77e:	85 32       	cpi	r24, 0x25	; 37
 780:	29 f4       	brne	.+10     	; 0x78c <vfprintf+0x56>
 782:	b6 01       	movw	r22, r12
 784:	90 e0       	ldi	r25, 0x00	; 0
 786:	0e 94 92 05 	call	0xb24	; 0xb24 <fputc>
 78a:	e7 cf       	rjmp	.-50     	; 0x75a <vfprintf+0x24>
 78c:	91 2c       	mov	r9, r1
 78e:	21 2c       	mov	r2, r1
 790:	31 2c       	mov	r3, r1
 792:	ff e1       	ldi	r31, 0x1F	; 31
 794:	f3 15       	cp	r31, r3
 796:	d8 f0       	brcs	.+54     	; 0x7ce <vfprintf+0x98>
 798:	8b 32       	cpi	r24, 0x2B	; 43
 79a:	79 f0       	breq	.+30     	; 0x7ba <vfprintf+0x84>
 79c:	38 f4       	brcc	.+14     	; 0x7ac <vfprintf+0x76>
 79e:	80 32       	cpi	r24, 0x20	; 32
 7a0:	79 f0       	breq	.+30     	; 0x7c0 <vfprintf+0x8a>
 7a2:	83 32       	cpi	r24, 0x23	; 35
 7a4:	a1 f4       	brne	.+40     	; 0x7ce <vfprintf+0x98>
 7a6:	23 2d       	mov	r18, r3
 7a8:	20 61       	ori	r18, 0x10	; 16
 7aa:	1d c0       	rjmp	.+58     	; 0x7e6 <vfprintf+0xb0>
 7ac:	8d 32       	cpi	r24, 0x2D	; 45
 7ae:	61 f0       	breq	.+24     	; 0x7c8 <vfprintf+0x92>
 7b0:	80 33       	cpi	r24, 0x30	; 48
 7b2:	69 f4       	brne	.+26     	; 0x7ce <vfprintf+0x98>
 7b4:	23 2d       	mov	r18, r3
 7b6:	21 60       	ori	r18, 0x01	; 1
 7b8:	16 c0       	rjmp	.+44     	; 0x7e6 <vfprintf+0xb0>
 7ba:	83 2d       	mov	r24, r3
 7bc:	82 60       	ori	r24, 0x02	; 2
 7be:	38 2e       	mov	r3, r24
 7c0:	e3 2d       	mov	r30, r3
 7c2:	e4 60       	ori	r30, 0x04	; 4
 7c4:	3e 2e       	mov	r3, r30
 7c6:	2a c0       	rjmp	.+84     	; 0x81c <vfprintf+0xe6>
 7c8:	f3 2d       	mov	r31, r3
 7ca:	f8 60       	ori	r31, 0x08	; 8
 7cc:	1d c0       	rjmp	.+58     	; 0x808 <vfprintf+0xd2>
 7ce:	37 fc       	sbrc	r3, 7
 7d0:	2d c0       	rjmp	.+90     	; 0x82c <vfprintf+0xf6>
 7d2:	20 ed       	ldi	r18, 0xD0	; 208
 7d4:	28 0f       	add	r18, r24
 7d6:	2a 30       	cpi	r18, 0x0A	; 10
 7d8:	40 f0       	brcs	.+16     	; 0x7ea <vfprintf+0xb4>
 7da:	8e 32       	cpi	r24, 0x2E	; 46
 7dc:	b9 f4       	brne	.+46     	; 0x80c <vfprintf+0xd6>
 7de:	36 fc       	sbrc	r3, 6
 7e0:	81 c1       	rjmp	.+770    	; 0xae4 <vfprintf+0x3ae>
 7e2:	23 2d       	mov	r18, r3
 7e4:	20 64       	ori	r18, 0x40	; 64
 7e6:	32 2e       	mov	r3, r18
 7e8:	19 c0       	rjmp	.+50     	; 0x81c <vfprintf+0xe6>
 7ea:	36 fe       	sbrs	r3, 6
 7ec:	06 c0       	rjmp	.+12     	; 0x7fa <vfprintf+0xc4>
 7ee:	8a e0       	ldi	r24, 0x0A	; 10
 7f0:	98 9e       	mul	r9, r24
 7f2:	20 0d       	add	r18, r0
 7f4:	11 24       	eor	r1, r1
 7f6:	92 2e       	mov	r9, r18
 7f8:	11 c0       	rjmp	.+34     	; 0x81c <vfprintf+0xe6>
 7fa:	ea e0       	ldi	r30, 0x0A	; 10
 7fc:	2e 9e       	mul	r2, r30
 7fe:	20 0d       	add	r18, r0
 800:	11 24       	eor	r1, r1
 802:	22 2e       	mov	r2, r18
 804:	f3 2d       	mov	r31, r3
 806:	f0 62       	ori	r31, 0x20	; 32
 808:	3f 2e       	mov	r3, r31
 80a:	08 c0       	rjmp	.+16     	; 0x81c <vfprintf+0xe6>
 80c:	8c 36       	cpi	r24, 0x6C	; 108
 80e:	21 f4       	brne	.+8      	; 0x818 <vfprintf+0xe2>
 810:	83 2d       	mov	r24, r3
 812:	80 68       	ori	r24, 0x80	; 128
 814:	38 2e       	mov	r3, r24
 816:	02 c0       	rjmp	.+4      	; 0x81c <vfprintf+0xe6>
 818:	88 36       	cpi	r24, 0x68	; 104
 81a:	41 f4       	brne	.+16     	; 0x82c <vfprintf+0xf6>
 81c:	f7 01       	movw	r30, r14
 81e:	93 fd       	sbrc	r25, 3
 820:	85 91       	lpm	r24, Z+
 822:	93 ff       	sbrs	r25, 3
 824:	81 91       	ld	r24, Z+
 826:	7f 01       	movw	r14, r30
 828:	81 11       	cpse	r24, r1
 82a:	b3 cf       	rjmp	.-154    	; 0x792 <vfprintf+0x5c>
 82c:	98 2f       	mov	r25, r24
 82e:	9f 7d       	andi	r25, 0xDF	; 223
 830:	95 54       	subi	r25, 0x45	; 69
 832:	93 30       	cpi	r25, 0x03	; 3
 834:	28 f4       	brcc	.+10     	; 0x840 <vfprintf+0x10a>
 836:	0c 5f       	subi	r16, 0xFC	; 252
 838:	1f 4f       	sbci	r17, 0xFF	; 255
 83a:	9f e3       	ldi	r25, 0x3F	; 63
 83c:	99 83       	std	Y+1, r25	; 0x01
 83e:	0d c0       	rjmp	.+26     	; 0x85a <vfprintf+0x124>
 840:	83 36       	cpi	r24, 0x63	; 99
 842:	31 f0       	breq	.+12     	; 0x850 <vfprintf+0x11a>
 844:	83 37       	cpi	r24, 0x73	; 115
 846:	71 f0       	breq	.+28     	; 0x864 <vfprintf+0x12e>
 848:	83 35       	cpi	r24, 0x53	; 83
 84a:	09 f0       	breq	.+2      	; 0x84e <vfprintf+0x118>
 84c:	59 c0       	rjmp	.+178    	; 0x900 <vfprintf+0x1ca>
 84e:	21 c0       	rjmp	.+66     	; 0x892 <vfprintf+0x15c>
 850:	f8 01       	movw	r30, r16
 852:	80 81       	ld	r24, Z
 854:	89 83       	std	Y+1, r24	; 0x01
 856:	0e 5f       	subi	r16, 0xFE	; 254
 858:	1f 4f       	sbci	r17, 0xFF	; 255
 85a:	88 24       	eor	r8, r8
 85c:	83 94       	inc	r8
 85e:	91 2c       	mov	r9, r1
 860:	53 01       	movw	r10, r6
 862:	13 c0       	rjmp	.+38     	; 0x88a <vfprintf+0x154>
 864:	28 01       	movw	r4, r16
 866:	f2 e0       	ldi	r31, 0x02	; 2
 868:	4f 0e       	add	r4, r31
 86a:	51 1c       	adc	r5, r1
 86c:	f8 01       	movw	r30, r16
 86e:	a0 80       	ld	r10, Z
 870:	b1 80       	ldd	r11, Z+1	; 0x01
 872:	36 fe       	sbrs	r3, 6
 874:	03 c0       	rjmp	.+6      	; 0x87c <vfprintf+0x146>
 876:	69 2d       	mov	r22, r9
 878:	70 e0       	ldi	r23, 0x00	; 0
 87a:	02 c0       	rjmp	.+4      	; 0x880 <vfprintf+0x14a>
 87c:	6f ef       	ldi	r22, 0xFF	; 255
 87e:	7f ef       	ldi	r23, 0xFF	; 255
 880:	c5 01       	movw	r24, r10
 882:	0e 94 87 05 	call	0xb0e	; 0xb0e <strnlen>
 886:	4c 01       	movw	r8, r24
 888:	82 01       	movw	r16, r4
 88a:	f3 2d       	mov	r31, r3
 88c:	ff 77       	andi	r31, 0x7F	; 127
 88e:	3f 2e       	mov	r3, r31
 890:	16 c0       	rjmp	.+44     	; 0x8be <vfprintf+0x188>
 892:	28 01       	movw	r4, r16
 894:	22 e0       	ldi	r18, 0x02	; 2
 896:	42 0e       	add	r4, r18
 898:	51 1c       	adc	r5, r1
 89a:	f8 01       	movw	r30, r16
 89c:	a0 80       	ld	r10, Z
 89e:	b1 80       	ldd	r11, Z+1	; 0x01
 8a0:	36 fe       	sbrs	r3, 6
 8a2:	03 c0       	rjmp	.+6      	; 0x8aa <vfprintf+0x174>
 8a4:	69 2d       	mov	r22, r9
 8a6:	70 e0       	ldi	r23, 0x00	; 0
 8a8:	02 c0       	rjmp	.+4      	; 0x8ae <vfprintf+0x178>
 8aa:	6f ef       	ldi	r22, 0xFF	; 255
 8ac:	7f ef       	ldi	r23, 0xFF	; 255
 8ae:	c5 01       	movw	r24, r10
 8b0:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <strnlen_P>
 8b4:	4c 01       	movw	r8, r24
 8b6:	f3 2d       	mov	r31, r3
 8b8:	f0 68       	ori	r31, 0x80	; 128
 8ba:	3f 2e       	mov	r3, r31
 8bc:	82 01       	movw	r16, r4
 8be:	33 fc       	sbrc	r3, 3
 8c0:	1b c0       	rjmp	.+54     	; 0x8f8 <vfprintf+0x1c2>
 8c2:	82 2d       	mov	r24, r2
 8c4:	90 e0       	ldi	r25, 0x00	; 0
 8c6:	88 16       	cp	r8, r24
 8c8:	99 06       	cpc	r9, r25
 8ca:	b0 f4       	brcc	.+44     	; 0x8f8 <vfprintf+0x1c2>
 8cc:	b6 01       	movw	r22, r12
 8ce:	80 e2       	ldi	r24, 0x20	; 32
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	0e 94 92 05 	call	0xb24	; 0xb24 <fputc>
 8d6:	2a 94       	dec	r2
 8d8:	f4 cf       	rjmp	.-24     	; 0x8c2 <vfprintf+0x18c>
 8da:	f5 01       	movw	r30, r10
 8dc:	37 fc       	sbrc	r3, 7
 8de:	85 91       	lpm	r24, Z+
 8e0:	37 fe       	sbrs	r3, 7
 8e2:	81 91       	ld	r24, Z+
 8e4:	5f 01       	movw	r10, r30
 8e6:	b6 01       	movw	r22, r12
 8e8:	90 e0       	ldi	r25, 0x00	; 0
 8ea:	0e 94 92 05 	call	0xb24	; 0xb24 <fputc>
 8ee:	21 10       	cpse	r2, r1
 8f0:	2a 94       	dec	r2
 8f2:	21 e0       	ldi	r18, 0x01	; 1
 8f4:	82 1a       	sub	r8, r18
 8f6:	91 08       	sbc	r9, r1
 8f8:	81 14       	cp	r8, r1
 8fa:	91 04       	cpc	r9, r1
 8fc:	71 f7       	brne	.-36     	; 0x8da <vfprintf+0x1a4>
 8fe:	e8 c0       	rjmp	.+464    	; 0xad0 <vfprintf+0x39a>
 900:	84 36       	cpi	r24, 0x64	; 100
 902:	11 f0       	breq	.+4      	; 0x908 <vfprintf+0x1d2>
 904:	89 36       	cpi	r24, 0x69	; 105
 906:	41 f5       	brne	.+80     	; 0x958 <vfprintf+0x222>
 908:	f8 01       	movw	r30, r16
 90a:	37 fe       	sbrs	r3, 7
 90c:	07 c0       	rjmp	.+14     	; 0x91c <vfprintf+0x1e6>
 90e:	60 81       	ld	r22, Z
 910:	71 81       	ldd	r23, Z+1	; 0x01
 912:	82 81       	ldd	r24, Z+2	; 0x02
 914:	93 81       	ldd	r25, Z+3	; 0x03
 916:	0c 5f       	subi	r16, 0xFC	; 252
 918:	1f 4f       	sbci	r17, 0xFF	; 255
 91a:	08 c0       	rjmp	.+16     	; 0x92c <vfprintf+0x1f6>
 91c:	60 81       	ld	r22, Z
 91e:	71 81       	ldd	r23, Z+1	; 0x01
 920:	07 2e       	mov	r0, r23
 922:	00 0c       	add	r0, r0
 924:	88 0b       	sbc	r24, r24
 926:	99 0b       	sbc	r25, r25
 928:	0e 5f       	subi	r16, 0xFE	; 254
 92a:	1f 4f       	sbci	r17, 0xFF	; 255
 92c:	f3 2d       	mov	r31, r3
 92e:	ff 76       	andi	r31, 0x6F	; 111
 930:	3f 2e       	mov	r3, r31
 932:	97 ff       	sbrs	r25, 7
 934:	09 c0       	rjmp	.+18     	; 0x948 <vfprintf+0x212>
 936:	90 95       	com	r25
 938:	80 95       	com	r24
 93a:	70 95       	com	r23
 93c:	61 95       	neg	r22
 93e:	7f 4f       	sbci	r23, 0xFF	; 255
 940:	8f 4f       	sbci	r24, 0xFF	; 255
 942:	9f 4f       	sbci	r25, 0xFF	; 255
 944:	f0 68       	ori	r31, 0x80	; 128
 946:	3f 2e       	mov	r3, r31
 948:	2a e0       	ldi	r18, 0x0A	; 10
 94a:	30 e0       	ldi	r19, 0x00	; 0
 94c:	a3 01       	movw	r20, r6
 94e:	0e 94 ce 05 	call	0xb9c	; 0xb9c <__ultoa_invert>
 952:	88 2e       	mov	r8, r24
 954:	86 18       	sub	r8, r6
 956:	45 c0       	rjmp	.+138    	; 0x9e2 <vfprintf+0x2ac>
 958:	85 37       	cpi	r24, 0x75	; 117
 95a:	31 f4       	brne	.+12     	; 0x968 <vfprintf+0x232>
 95c:	23 2d       	mov	r18, r3
 95e:	2f 7e       	andi	r18, 0xEF	; 239
 960:	b2 2e       	mov	r11, r18
 962:	2a e0       	ldi	r18, 0x0A	; 10
 964:	30 e0       	ldi	r19, 0x00	; 0
 966:	25 c0       	rjmp	.+74     	; 0x9b2 <vfprintf+0x27c>
 968:	93 2d       	mov	r25, r3
 96a:	99 7f       	andi	r25, 0xF9	; 249
 96c:	b9 2e       	mov	r11, r25
 96e:	8f 36       	cpi	r24, 0x6F	; 111
 970:	c1 f0       	breq	.+48     	; 0x9a2 <vfprintf+0x26c>
 972:	18 f4       	brcc	.+6      	; 0x97a <vfprintf+0x244>
 974:	88 35       	cpi	r24, 0x58	; 88
 976:	79 f0       	breq	.+30     	; 0x996 <vfprintf+0x260>
 978:	b5 c0       	rjmp	.+362    	; 0xae4 <vfprintf+0x3ae>
 97a:	80 37       	cpi	r24, 0x70	; 112
 97c:	19 f0       	breq	.+6      	; 0x984 <vfprintf+0x24e>
 97e:	88 37       	cpi	r24, 0x78	; 120
 980:	21 f0       	breq	.+8      	; 0x98a <vfprintf+0x254>
 982:	b0 c0       	rjmp	.+352    	; 0xae4 <vfprintf+0x3ae>
 984:	e9 2f       	mov	r30, r25
 986:	e0 61       	ori	r30, 0x10	; 16
 988:	be 2e       	mov	r11, r30
 98a:	b4 fe       	sbrs	r11, 4
 98c:	0d c0       	rjmp	.+26     	; 0x9a8 <vfprintf+0x272>
 98e:	fb 2d       	mov	r31, r11
 990:	f4 60       	ori	r31, 0x04	; 4
 992:	bf 2e       	mov	r11, r31
 994:	09 c0       	rjmp	.+18     	; 0x9a8 <vfprintf+0x272>
 996:	34 fe       	sbrs	r3, 4
 998:	0a c0       	rjmp	.+20     	; 0x9ae <vfprintf+0x278>
 99a:	29 2f       	mov	r18, r25
 99c:	26 60       	ori	r18, 0x06	; 6
 99e:	b2 2e       	mov	r11, r18
 9a0:	06 c0       	rjmp	.+12     	; 0x9ae <vfprintf+0x278>
 9a2:	28 e0       	ldi	r18, 0x08	; 8
 9a4:	30 e0       	ldi	r19, 0x00	; 0
 9a6:	05 c0       	rjmp	.+10     	; 0x9b2 <vfprintf+0x27c>
 9a8:	20 e1       	ldi	r18, 0x10	; 16
 9aa:	30 e0       	ldi	r19, 0x00	; 0
 9ac:	02 c0       	rjmp	.+4      	; 0x9b2 <vfprintf+0x27c>
 9ae:	20 e1       	ldi	r18, 0x10	; 16
 9b0:	32 e0       	ldi	r19, 0x02	; 2
 9b2:	f8 01       	movw	r30, r16
 9b4:	b7 fe       	sbrs	r11, 7
 9b6:	07 c0       	rjmp	.+14     	; 0x9c6 <vfprintf+0x290>
 9b8:	60 81       	ld	r22, Z
 9ba:	71 81       	ldd	r23, Z+1	; 0x01
 9bc:	82 81       	ldd	r24, Z+2	; 0x02
 9be:	93 81       	ldd	r25, Z+3	; 0x03
 9c0:	0c 5f       	subi	r16, 0xFC	; 252
 9c2:	1f 4f       	sbci	r17, 0xFF	; 255
 9c4:	06 c0       	rjmp	.+12     	; 0x9d2 <vfprintf+0x29c>
 9c6:	60 81       	ld	r22, Z
 9c8:	71 81       	ldd	r23, Z+1	; 0x01
 9ca:	80 e0       	ldi	r24, 0x00	; 0
 9cc:	90 e0       	ldi	r25, 0x00	; 0
 9ce:	0e 5f       	subi	r16, 0xFE	; 254
 9d0:	1f 4f       	sbci	r17, 0xFF	; 255
 9d2:	a3 01       	movw	r20, r6
 9d4:	0e 94 ce 05 	call	0xb9c	; 0xb9c <__ultoa_invert>
 9d8:	88 2e       	mov	r8, r24
 9da:	86 18       	sub	r8, r6
 9dc:	fb 2d       	mov	r31, r11
 9de:	ff 77       	andi	r31, 0x7F	; 127
 9e0:	3f 2e       	mov	r3, r31
 9e2:	36 fe       	sbrs	r3, 6
 9e4:	0d c0       	rjmp	.+26     	; 0xa00 <vfprintf+0x2ca>
 9e6:	23 2d       	mov	r18, r3
 9e8:	2e 7f       	andi	r18, 0xFE	; 254
 9ea:	a2 2e       	mov	r10, r18
 9ec:	89 14       	cp	r8, r9
 9ee:	58 f4       	brcc	.+22     	; 0xa06 <vfprintf+0x2d0>
 9f0:	34 fe       	sbrs	r3, 4
 9f2:	0b c0       	rjmp	.+22     	; 0xa0a <vfprintf+0x2d4>
 9f4:	32 fc       	sbrc	r3, 2
 9f6:	09 c0       	rjmp	.+18     	; 0xa0a <vfprintf+0x2d4>
 9f8:	83 2d       	mov	r24, r3
 9fa:	8e 7e       	andi	r24, 0xEE	; 238
 9fc:	a8 2e       	mov	r10, r24
 9fe:	05 c0       	rjmp	.+10     	; 0xa0a <vfprintf+0x2d4>
 a00:	b8 2c       	mov	r11, r8
 a02:	a3 2c       	mov	r10, r3
 a04:	03 c0       	rjmp	.+6      	; 0xa0c <vfprintf+0x2d6>
 a06:	b8 2c       	mov	r11, r8
 a08:	01 c0       	rjmp	.+2      	; 0xa0c <vfprintf+0x2d6>
 a0a:	b9 2c       	mov	r11, r9
 a0c:	a4 fe       	sbrs	r10, 4
 a0e:	0f c0       	rjmp	.+30     	; 0xa2e <vfprintf+0x2f8>
 a10:	fe 01       	movw	r30, r28
 a12:	e8 0d       	add	r30, r8
 a14:	f1 1d       	adc	r31, r1
 a16:	80 81       	ld	r24, Z
 a18:	80 33       	cpi	r24, 0x30	; 48
 a1a:	21 f4       	brne	.+8      	; 0xa24 <vfprintf+0x2ee>
 a1c:	9a 2d       	mov	r25, r10
 a1e:	99 7e       	andi	r25, 0xE9	; 233
 a20:	a9 2e       	mov	r10, r25
 a22:	09 c0       	rjmp	.+18     	; 0xa36 <vfprintf+0x300>
 a24:	a2 fe       	sbrs	r10, 2
 a26:	06 c0       	rjmp	.+12     	; 0xa34 <vfprintf+0x2fe>
 a28:	b3 94       	inc	r11
 a2a:	b3 94       	inc	r11
 a2c:	04 c0       	rjmp	.+8      	; 0xa36 <vfprintf+0x300>
 a2e:	8a 2d       	mov	r24, r10
 a30:	86 78       	andi	r24, 0x86	; 134
 a32:	09 f0       	breq	.+2      	; 0xa36 <vfprintf+0x300>
 a34:	b3 94       	inc	r11
 a36:	a3 fc       	sbrc	r10, 3
 a38:	11 c0       	rjmp	.+34     	; 0xa5c <vfprintf+0x326>
 a3a:	a0 fe       	sbrs	r10, 0
 a3c:	06 c0       	rjmp	.+12     	; 0xa4a <vfprintf+0x314>
 a3e:	b2 14       	cp	r11, r2
 a40:	88 f4       	brcc	.+34     	; 0xa64 <vfprintf+0x32e>
 a42:	28 0c       	add	r2, r8
 a44:	92 2c       	mov	r9, r2
 a46:	9b 18       	sub	r9, r11
 a48:	0e c0       	rjmp	.+28     	; 0xa66 <vfprintf+0x330>
 a4a:	b2 14       	cp	r11, r2
 a4c:	60 f4       	brcc	.+24     	; 0xa66 <vfprintf+0x330>
 a4e:	b6 01       	movw	r22, r12
 a50:	80 e2       	ldi	r24, 0x20	; 32
 a52:	90 e0       	ldi	r25, 0x00	; 0
 a54:	0e 94 92 05 	call	0xb24	; 0xb24 <fputc>
 a58:	b3 94       	inc	r11
 a5a:	f7 cf       	rjmp	.-18     	; 0xa4a <vfprintf+0x314>
 a5c:	b2 14       	cp	r11, r2
 a5e:	18 f4       	brcc	.+6      	; 0xa66 <vfprintf+0x330>
 a60:	2b 18       	sub	r2, r11
 a62:	02 c0       	rjmp	.+4      	; 0xa68 <vfprintf+0x332>
 a64:	98 2c       	mov	r9, r8
 a66:	21 2c       	mov	r2, r1
 a68:	a4 fe       	sbrs	r10, 4
 a6a:	10 c0       	rjmp	.+32     	; 0xa8c <vfprintf+0x356>
 a6c:	b6 01       	movw	r22, r12
 a6e:	80 e3       	ldi	r24, 0x30	; 48
 a70:	90 e0       	ldi	r25, 0x00	; 0
 a72:	0e 94 92 05 	call	0xb24	; 0xb24 <fputc>
 a76:	a2 fe       	sbrs	r10, 2
 a78:	17 c0       	rjmp	.+46     	; 0xaa8 <vfprintf+0x372>
 a7a:	a1 fc       	sbrc	r10, 1
 a7c:	03 c0       	rjmp	.+6      	; 0xa84 <vfprintf+0x34e>
 a7e:	88 e7       	ldi	r24, 0x78	; 120
 a80:	90 e0       	ldi	r25, 0x00	; 0
 a82:	02 c0       	rjmp	.+4      	; 0xa88 <vfprintf+0x352>
 a84:	88 e5       	ldi	r24, 0x58	; 88
 a86:	90 e0       	ldi	r25, 0x00	; 0
 a88:	b6 01       	movw	r22, r12
 a8a:	0c c0       	rjmp	.+24     	; 0xaa4 <vfprintf+0x36e>
 a8c:	8a 2d       	mov	r24, r10
 a8e:	86 78       	andi	r24, 0x86	; 134
 a90:	59 f0       	breq	.+22     	; 0xaa8 <vfprintf+0x372>
 a92:	a1 fe       	sbrs	r10, 1
 a94:	02 c0       	rjmp	.+4      	; 0xa9a <vfprintf+0x364>
 a96:	8b e2       	ldi	r24, 0x2B	; 43
 a98:	01 c0       	rjmp	.+2      	; 0xa9c <vfprintf+0x366>
 a9a:	80 e2       	ldi	r24, 0x20	; 32
 a9c:	a7 fc       	sbrc	r10, 7
 a9e:	8d e2       	ldi	r24, 0x2D	; 45
 aa0:	b6 01       	movw	r22, r12
 aa2:	90 e0       	ldi	r25, 0x00	; 0
 aa4:	0e 94 92 05 	call	0xb24	; 0xb24 <fputc>
 aa8:	89 14       	cp	r8, r9
 aaa:	38 f4       	brcc	.+14     	; 0xaba <vfprintf+0x384>
 aac:	b6 01       	movw	r22, r12
 aae:	80 e3       	ldi	r24, 0x30	; 48
 ab0:	90 e0       	ldi	r25, 0x00	; 0
 ab2:	0e 94 92 05 	call	0xb24	; 0xb24 <fputc>
 ab6:	9a 94       	dec	r9
 ab8:	f7 cf       	rjmp	.-18     	; 0xaa8 <vfprintf+0x372>
 aba:	8a 94       	dec	r8
 abc:	f3 01       	movw	r30, r6
 abe:	e8 0d       	add	r30, r8
 ac0:	f1 1d       	adc	r31, r1
 ac2:	80 81       	ld	r24, Z
 ac4:	b6 01       	movw	r22, r12
 ac6:	90 e0       	ldi	r25, 0x00	; 0
 ac8:	0e 94 92 05 	call	0xb24	; 0xb24 <fputc>
 acc:	81 10       	cpse	r8, r1
 ace:	f5 cf       	rjmp	.-22     	; 0xaba <vfprintf+0x384>
 ad0:	22 20       	and	r2, r2
 ad2:	09 f4       	brne	.+2      	; 0xad6 <vfprintf+0x3a0>
 ad4:	42 ce       	rjmp	.-892    	; 0x75a <vfprintf+0x24>
 ad6:	b6 01       	movw	r22, r12
 ad8:	80 e2       	ldi	r24, 0x20	; 32
 ada:	90 e0       	ldi	r25, 0x00	; 0
 adc:	0e 94 92 05 	call	0xb24	; 0xb24 <fputc>
 ae0:	2a 94       	dec	r2
 ae2:	f6 cf       	rjmp	.-20     	; 0xad0 <vfprintf+0x39a>
 ae4:	f6 01       	movw	r30, r12
 ae6:	86 81       	ldd	r24, Z+6	; 0x06
 ae8:	97 81       	ldd	r25, Z+7	; 0x07
 aea:	02 c0       	rjmp	.+4      	; 0xaf0 <vfprintf+0x3ba>
 aec:	8f ef       	ldi	r24, 0xFF	; 255
 aee:	9f ef       	ldi	r25, 0xFF	; 255
 af0:	2b 96       	adiw	r28, 0x0b	; 11
 af2:	e2 e1       	ldi	r30, 0x12	; 18
 af4:	0c 94 48 06 	jmp	0xc90	; 0xc90 <__epilogue_restores__>

00000af8 <strnlen_P>:
 af8:	fc 01       	movw	r30, r24
 afa:	05 90       	lpm	r0, Z+
 afc:	61 50       	subi	r22, 0x01	; 1
 afe:	70 40       	sbci	r23, 0x00	; 0
 b00:	01 10       	cpse	r0, r1
 b02:	d8 f7       	brcc	.-10     	; 0xafa <strnlen_P+0x2>
 b04:	80 95       	com	r24
 b06:	90 95       	com	r25
 b08:	8e 0f       	add	r24, r30
 b0a:	9f 1f       	adc	r25, r31
 b0c:	08 95       	ret

00000b0e <strnlen>:
 b0e:	fc 01       	movw	r30, r24
 b10:	61 50       	subi	r22, 0x01	; 1
 b12:	70 40       	sbci	r23, 0x00	; 0
 b14:	01 90       	ld	r0, Z+
 b16:	01 10       	cpse	r0, r1
 b18:	d8 f7       	brcc	.-10     	; 0xb10 <strnlen+0x2>
 b1a:	80 95       	com	r24
 b1c:	90 95       	com	r25
 b1e:	8e 0f       	add	r24, r30
 b20:	9f 1f       	adc	r25, r31
 b22:	08 95       	ret

00000b24 <fputc>:
 b24:	0f 93       	push	r16
 b26:	1f 93       	push	r17
 b28:	cf 93       	push	r28
 b2a:	df 93       	push	r29
 b2c:	fb 01       	movw	r30, r22
 b2e:	23 81       	ldd	r18, Z+3	; 0x03
 b30:	21 fd       	sbrc	r18, 1
 b32:	03 c0       	rjmp	.+6      	; 0xb3a <fputc+0x16>
 b34:	8f ef       	ldi	r24, 0xFF	; 255
 b36:	9f ef       	ldi	r25, 0xFF	; 255
 b38:	2c c0       	rjmp	.+88     	; 0xb92 <fputc+0x6e>
 b3a:	22 ff       	sbrs	r18, 2
 b3c:	16 c0       	rjmp	.+44     	; 0xb6a <fputc+0x46>
 b3e:	46 81       	ldd	r20, Z+6	; 0x06
 b40:	57 81       	ldd	r21, Z+7	; 0x07
 b42:	24 81       	ldd	r18, Z+4	; 0x04
 b44:	35 81       	ldd	r19, Z+5	; 0x05
 b46:	42 17       	cp	r20, r18
 b48:	53 07       	cpc	r21, r19
 b4a:	44 f4       	brge	.+16     	; 0xb5c <fputc+0x38>
 b4c:	a0 81       	ld	r26, Z
 b4e:	b1 81       	ldd	r27, Z+1	; 0x01
 b50:	9d 01       	movw	r18, r26
 b52:	2f 5f       	subi	r18, 0xFF	; 255
 b54:	3f 4f       	sbci	r19, 0xFF	; 255
 b56:	31 83       	std	Z+1, r19	; 0x01
 b58:	20 83       	st	Z, r18
 b5a:	8c 93       	st	X, r24
 b5c:	26 81       	ldd	r18, Z+6	; 0x06
 b5e:	37 81       	ldd	r19, Z+7	; 0x07
 b60:	2f 5f       	subi	r18, 0xFF	; 255
 b62:	3f 4f       	sbci	r19, 0xFF	; 255
 b64:	37 83       	std	Z+7, r19	; 0x07
 b66:	26 83       	std	Z+6, r18	; 0x06
 b68:	14 c0       	rjmp	.+40     	; 0xb92 <fputc+0x6e>
 b6a:	8b 01       	movw	r16, r22
 b6c:	ec 01       	movw	r28, r24
 b6e:	fb 01       	movw	r30, r22
 b70:	00 84       	ldd	r0, Z+8	; 0x08
 b72:	f1 85       	ldd	r31, Z+9	; 0x09
 b74:	e0 2d       	mov	r30, r0
 b76:	09 95       	icall
 b78:	89 2b       	or	r24, r25
 b7a:	e1 f6       	brne	.-72     	; 0xb34 <fputc+0x10>
 b7c:	d8 01       	movw	r26, r16
 b7e:	16 96       	adiw	r26, 0x06	; 6
 b80:	8d 91       	ld	r24, X+
 b82:	9c 91       	ld	r25, X
 b84:	17 97       	sbiw	r26, 0x07	; 7
 b86:	01 96       	adiw	r24, 0x01	; 1
 b88:	17 96       	adiw	r26, 0x07	; 7
 b8a:	9c 93       	st	X, r25
 b8c:	8e 93       	st	-X, r24
 b8e:	16 97       	sbiw	r26, 0x06	; 6
 b90:	ce 01       	movw	r24, r28
 b92:	df 91       	pop	r29
 b94:	cf 91       	pop	r28
 b96:	1f 91       	pop	r17
 b98:	0f 91       	pop	r16
 b9a:	08 95       	ret

00000b9c <__ultoa_invert>:
 b9c:	fa 01       	movw	r30, r20
 b9e:	aa 27       	eor	r26, r26
 ba0:	28 30       	cpi	r18, 0x08	; 8
 ba2:	51 f1       	breq	.+84     	; 0xbf8 <__ultoa_invert+0x5c>
 ba4:	20 31       	cpi	r18, 0x10	; 16
 ba6:	81 f1       	breq	.+96     	; 0xc08 <__ultoa_invert+0x6c>
 ba8:	e8 94       	clt
 baa:	6f 93       	push	r22
 bac:	6e 7f       	andi	r22, 0xFE	; 254
 bae:	6e 5f       	subi	r22, 0xFE	; 254
 bb0:	7f 4f       	sbci	r23, 0xFF	; 255
 bb2:	8f 4f       	sbci	r24, 0xFF	; 255
 bb4:	9f 4f       	sbci	r25, 0xFF	; 255
 bb6:	af 4f       	sbci	r26, 0xFF	; 255
 bb8:	b1 e0       	ldi	r27, 0x01	; 1
 bba:	3e d0       	rcall	.+124    	; 0xc38 <__ultoa_invert+0x9c>
 bbc:	b4 e0       	ldi	r27, 0x04	; 4
 bbe:	3c d0       	rcall	.+120    	; 0xc38 <__ultoa_invert+0x9c>
 bc0:	67 0f       	add	r22, r23
 bc2:	78 1f       	adc	r23, r24
 bc4:	89 1f       	adc	r24, r25
 bc6:	9a 1f       	adc	r25, r26
 bc8:	a1 1d       	adc	r26, r1
 bca:	68 0f       	add	r22, r24
 bcc:	79 1f       	adc	r23, r25
 bce:	8a 1f       	adc	r24, r26
 bd0:	91 1d       	adc	r25, r1
 bd2:	a1 1d       	adc	r26, r1
 bd4:	6a 0f       	add	r22, r26
 bd6:	71 1d       	adc	r23, r1
 bd8:	81 1d       	adc	r24, r1
 bda:	91 1d       	adc	r25, r1
 bdc:	a1 1d       	adc	r26, r1
 bde:	20 d0       	rcall	.+64     	; 0xc20 <__ultoa_invert+0x84>
 be0:	09 f4       	brne	.+2      	; 0xbe4 <__ultoa_invert+0x48>
 be2:	68 94       	set
 be4:	3f 91       	pop	r19
 be6:	2a e0       	ldi	r18, 0x0A	; 10
 be8:	26 9f       	mul	r18, r22
 bea:	11 24       	eor	r1, r1
 bec:	30 19       	sub	r19, r0
 bee:	30 5d       	subi	r19, 0xD0	; 208
 bf0:	31 93       	st	Z+, r19
 bf2:	de f6       	brtc	.-74     	; 0xbaa <__ultoa_invert+0xe>
 bf4:	cf 01       	movw	r24, r30
 bf6:	08 95       	ret
 bf8:	46 2f       	mov	r20, r22
 bfa:	47 70       	andi	r20, 0x07	; 7
 bfc:	40 5d       	subi	r20, 0xD0	; 208
 bfe:	41 93       	st	Z+, r20
 c00:	b3 e0       	ldi	r27, 0x03	; 3
 c02:	0f d0       	rcall	.+30     	; 0xc22 <__ultoa_invert+0x86>
 c04:	c9 f7       	brne	.-14     	; 0xbf8 <__ultoa_invert+0x5c>
 c06:	f6 cf       	rjmp	.-20     	; 0xbf4 <__ultoa_invert+0x58>
 c08:	46 2f       	mov	r20, r22
 c0a:	4f 70       	andi	r20, 0x0F	; 15
 c0c:	40 5d       	subi	r20, 0xD0	; 208
 c0e:	4a 33       	cpi	r20, 0x3A	; 58
 c10:	18 f0       	brcs	.+6      	; 0xc18 <__ultoa_invert+0x7c>
 c12:	49 5d       	subi	r20, 0xD9	; 217
 c14:	31 fd       	sbrc	r19, 1
 c16:	40 52       	subi	r20, 0x20	; 32
 c18:	41 93       	st	Z+, r20
 c1a:	02 d0       	rcall	.+4      	; 0xc20 <__ultoa_invert+0x84>
 c1c:	a9 f7       	brne	.-22     	; 0xc08 <__ultoa_invert+0x6c>
 c1e:	ea cf       	rjmp	.-44     	; 0xbf4 <__ultoa_invert+0x58>
 c20:	b4 e0       	ldi	r27, 0x04	; 4
 c22:	a6 95       	lsr	r26
 c24:	97 95       	ror	r25
 c26:	87 95       	ror	r24
 c28:	77 95       	ror	r23
 c2a:	67 95       	ror	r22
 c2c:	ba 95       	dec	r27
 c2e:	c9 f7       	brne	.-14     	; 0xc22 <__ultoa_invert+0x86>
 c30:	00 97       	sbiw	r24, 0x00	; 0
 c32:	61 05       	cpc	r22, r1
 c34:	71 05       	cpc	r23, r1
 c36:	08 95       	ret
 c38:	9b 01       	movw	r18, r22
 c3a:	ac 01       	movw	r20, r24
 c3c:	0a 2e       	mov	r0, r26
 c3e:	06 94       	lsr	r0
 c40:	57 95       	ror	r21
 c42:	47 95       	ror	r20
 c44:	37 95       	ror	r19
 c46:	27 95       	ror	r18
 c48:	ba 95       	dec	r27
 c4a:	c9 f7       	brne	.-14     	; 0xc3e <__ultoa_invert+0xa2>
 c4c:	62 0f       	add	r22, r18
 c4e:	73 1f       	adc	r23, r19
 c50:	84 1f       	adc	r24, r20
 c52:	95 1f       	adc	r25, r21
 c54:	a0 1d       	adc	r26, r0
 c56:	08 95       	ret

00000c58 <__prologue_saves__>:
 c58:	2f 92       	push	r2
 c5a:	3f 92       	push	r3
 c5c:	4f 92       	push	r4
 c5e:	5f 92       	push	r5
 c60:	6f 92       	push	r6
 c62:	7f 92       	push	r7
 c64:	8f 92       	push	r8
 c66:	9f 92       	push	r9
 c68:	af 92       	push	r10
 c6a:	bf 92       	push	r11
 c6c:	cf 92       	push	r12
 c6e:	df 92       	push	r13
 c70:	ef 92       	push	r14
 c72:	ff 92       	push	r15
 c74:	0f 93       	push	r16
 c76:	1f 93       	push	r17
 c78:	cf 93       	push	r28
 c7a:	df 93       	push	r29
 c7c:	cd b7       	in	r28, 0x3d	; 61
 c7e:	de b7       	in	r29, 0x3e	; 62
 c80:	ca 1b       	sub	r28, r26
 c82:	db 0b       	sbc	r29, r27
 c84:	0f b6       	in	r0, 0x3f	; 63
 c86:	f8 94       	cli
 c88:	de bf       	out	0x3e, r29	; 62
 c8a:	0f be       	out	0x3f, r0	; 63
 c8c:	cd bf       	out	0x3d, r28	; 61
 c8e:	09 94       	ijmp

00000c90 <__epilogue_restores__>:
 c90:	2a 88       	ldd	r2, Y+18	; 0x12
 c92:	39 88       	ldd	r3, Y+17	; 0x11
 c94:	48 88       	ldd	r4, Y+16	; 0x10
 c96:	5f 84       	ldd	r5, Y+15	; 0x0f
 c98:	6e 84       	ldd	r6, Y+14	; 0x0e
 c9a:	7d 84       	ldd	r7, Y+13	; 0x0d
 c9c:	8c 84       	ldd	r8, Y+12	; 0x0c
 c9e:	9b 84       	ldd	r9, Y+11	; 0x0b
 ca0:	aa 84       	ldd	r10, Y+10	; 0x0a
 ca2:	b9 84       	ldd	r11, Y+9	; 0x09
 ca4:	c8 84       	ldd	r12, Y+8	; 0x08
 ca6:	df 80       	ldd	r13, Y+7	; 0x07
 ca8:	ee 80       	ldd	r14, Y+6	; 0x06
 caa:	fd 80       	ldd	r15, Y+5	; 0x05
 cac:	0c 81       	ldd	r16, Y+4	; 0x04
 cae:	1b 81       	ldd	r17, Y+3	; 0x03
 cb0:	aa 81       	ldd	r26, Y+2	; 0x02
 cb2:	b9 81       	ldd	r27, Y+1	; 0x01
 cb4:	ce 0f       	add	r28, r30
 cb6:	d1 1d       	adc	r29, r1
 cb8:	0f b6       	in	r0, 0x3f	; 63
 cba:	f8 94       	cli
 cbc:	de bf       	out	0x3e, r29	; 62
 cbe:	0f be       	out	0x3f, r0	; 63
 cc0:	cd bf       	out	0x3d, r28	; 61
 cc2:	ed 01       	movw	r28, r26
 cc4:	08 95       	ret

00000cc6 <_exit>:
 cc6:	f8 94       	cli

00000cc8 <__stop_program>:
 cc8:	ff cf       	rjmp	.-2      	; 0xcc8 <__stop_program>
